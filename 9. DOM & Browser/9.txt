=======>
a1.
DOM Manipulation
    DOM (Document Object Model) manipulation is typically associated with browsers, 
    not directly with Node.js, because Node.js runs on the server-side, and there's no DOM in a 
    Node.js environment by default.

    DOM Manipulation means accessing and changing elements in the HTML document (like adding, editing, 
    or deleting elements) using JavaScript.
    üï∏Ô∏è In a browser, this allows you to dynamically change content, styles, or structure of web pages.

    Why DOM Manipulation is not native in Node.js?
    Node.js is not a browser, it runs JavaScript on the server, and doesn‚Äôt have access to the DOM (which is a browser API).
    But sometimes we still want to manipulate HTML files on the server (like parsing, modifying, or scraping content). In those cases, 
    we use libraries to simulate DOM in Node.js.

    How to Do DOM Manipulation in Node.js?
    Even though Node.js doesn‚Äôt have a native DOM, we can use libraries like:
    * jsdom ‚Äì simulates the DOM in Node.js.
    * cheerio ‚Äì lightweight alternative for parsing and manipulating HTML (like jQuery).
<=======

=======>
Events
<=======

=======>
Event Bubbling
<=======

=======>
Event Capturing
<=======

=======>
Debounce
<=======

=======>
Throttle
<=======

=======>
localStorage
<=======

=======>
setTimeout()
<=======

=======>
setInterval()
<=======
