// Monitoring MongoDB performance is critical in production systems to ensure reliability, scalability, and efficiency.

// Performance monitoring in MongoDB means tracking how well the database performs over time. It includes observing metrics like:
// * Query response times
// * CPU and memory usage
// * IOPS (input/output per second)
// * Connection count
// * Slow queries
// * Lock percentage
// * Replica set health

// Why ?
// âœ… Detect and troubleshoot slow queries
// âœ… Ensure availability and uptime
// âœ… Scale effectively
// âœ… Avoid downtime by acting before failure
// âœ… Understand system behavior under load

/* ðŸ”§ How to Monitor MongoDB Performance?
You can monitor performance using several approaches:
1. MongoDB Atlas (Cloud-based)
If youâ€™re using MongoDB Atlas, it provides a built-in monitoring dashboard:

    * Real-time performance charts
    * Slow query analyzer
    * Alerts and notifications
    * Replica set monitoring
ðŸ”— Go to Atlas â†’ Project â†’ Cluster â†’ Metrics

2. MongoDB Command Line Tools
a. mongostat
Shows real-time server statistics:
mongostat --host localhost
Output:
insert query update delete getmore command dirty used flushes vsize  res faults
    1     5     3      0       0     10    0.0%  0.0%       0  300MB 30MB      0

b. mongotop
Tracks read/write time per collection:
mongotop 5

3. Logs + Profiling
a. Enable Database Profiler
MongoDB has a built-in profiler:
db.setProfilingLevel(1, { slowms: 50 });

This logs queries that take longer than 50ms.
Check logs:
db.system.profile.find().sort({ ts: -1 }).limit(5)

b. Log File Monitoring
You can also inspect the log file generated by MongoDB (e.g., /var/log/mongodb/mongod.log).

4. Third-party Monitoring Tools
| Tool                 | Description                                     |
| -------------------- | ----------------------------------------------- |
| Prometheus + Grafana | Collects and visualizes metrics with dashboards |
| Datadog              | Full observability suite                        |
| New Relic            | APM + Infrastructure monitoring                 |
| Elastic Stack (ELK)  | Centralized logging and visualization           |

With Prometheus, use MongoDB Exporter to gather metrics.

ðŸ“ˆ Key Metrics to Watch
| Metric               | Why it matters                  |
| -------------------- | ------------------------------- |
| Query Execution Time | Detects slow operations         |
| Connections          | Max connection threshold        |
| Cache Usage          | Shows memory efficiency         |
| Lock Percentage      | High values = contention issues |
| Replication Lag      | Delayed reads from secondaries  |
*/
