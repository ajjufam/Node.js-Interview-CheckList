=======>
a1.
Setup Express App
    Express is a minimal and flexible Node.js web application framework that provides a robust set of features to 
    build web and mobile applications. It simplifies handling HTTP requests, routing, middleware, and server-side logic.

    Why ?
    * Simplifies server creation — you don’t have to work with the raw Node.js HTTP module.
    * Routing made easy — organize your endpoints with clean and readable code.
    * Middleware support — easily add functionality like logging, authentication, error handling.
    * Extensible — integrates with many template engines, databases, and other Node.js libraries.
    * Lightweight and fast — minimal overhead, giving you control and performance.
<=======

=======>
a2.
Routing (GET, POST, PUT, DELETE)
    Routing is the process of defining endpoints (URLs) in your server and deciding how your server responds to 
    client requests made to those endpoints. Each route handles a specific HTTP method and URL path.

    why ?
    * To organize your app so different URLs and HTTP methods trigger specific logic.
    * To handle client requests properly (fetch data, send data, update or delete data).
    * To build RESTful APIs which use these methods to manage resources.

    HTTP Methods
    | Method | Purpose              | Example use case                   |
    | ------ | -------------------- | ---------------------------------- |
    | GET    | Retrieve data        | Get user details                   |
    | POST   | Create new data      | Submit a new form or create a user |
    | PUT    | Update existing data | Update user profile info           |
    | DELETE | Remove data          | Delete a user or a resource        |

    How ?
    You use Express app methods that correspond to HTTP methods:
    * app.get(path, handler)
    * app.post(path, handler)
    * app.put(path, handler)
    * app.delete(path, handler)
<=======

=======>
a3.
Middleware
<=======

=======>
a4.
Router
<=======

=======>
a5.
req & res objects
<=======

=======>
a6.
Sending JSON/HTML
<=======

=======>
a7.
Error Middleware
<=======

=======>
a8.
Route Params & Query
<=======

=======>
a9.
Static Files
<=======

=======>
b1.
CORS
<=======

=======>
b2.
HTTP Status Codes
<=======

=======>
b3.
Body Parsing
<=======

=======>
b4.
File Upload (e.g., multer)
<=======

=======>
b5.
JWT Authentication
<=======

=======>
b6.
Input Validation
<=======
